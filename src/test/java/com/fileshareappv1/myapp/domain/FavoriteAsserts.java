package com.fileshareappv1.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FavoriteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteAllPropertiesEquals(Favorite expected, Favorite actual) {
        assertFavoriteAutoGeneratedPropertiesEquals(expected, actual);
        assertFavoriteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteAllUpdatablePropertiesEquals(Favorite expected, Favorite actual) {
        assertFavoriteUpdatableFieldsEquals(expected, actual);
        assertFavoriteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteAutoGeneratedPropertiesEquals(Favorite expected, Favorite actual) {
        assertThat(actual)
            .as("Verify Favorite auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteUpdatableFieldsEquals(Favorite expected, Favorite actual) {
        assertThat(actual)
            .as("Verify Favorite relevant properties")
            .satisfies(a -> assertThat(a.getSavedAt()).as("check savedAt").isEqualTo(expected.getSavedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFavoriteUpdatableRelationshipsEquals(Favorite expected, Favorite actual) {
        assertThat(actual)
            .as("Verify Favorite relationships")
            .satisfies(a -> assertThat(a.getPost()).as("check post").isEqualTo(expected.getPost()));
    }
}

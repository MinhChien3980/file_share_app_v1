package com.fileshareappv1.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileAllPropertiesEquals(File expected, File actual) {
        assertFileAutoGeneratedPropertiesEquals(expected, actual);
        assertFileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileAllUpdatablePropertiesEquals(File expected, File actual) {
        assertFileUpdatableFieldsEquals(expected, actual);
        assertFileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileAutoGeneratedPropertiesEquals(File expected, File actual) {
        assertThat(actual)
            .as("Verify File auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileUpdatableFieldsEquals(File expected, File actual) {
        assertThat(actual)
            .as("Verify File relevant properties")
            .satisfies(a -> assertThat(a.getFileName()).as("check fileName").isEqualTo(expected.getFileName()))
            .satisfies(a -> assertThat(a.getFileUrl()).as("check fileUrl").isEqualTo(expected.getFileUrl()))
            .satisfies(a -> assertThat(a.getMimeType()).as("check mimeType").isEqualTo(expected.getMimeType()))
            .satisfies(a -> assertThat(a.getFileSize()).as("check fileSize").isEqualTo(expected.getFileSize()))
            .satisfies(a -> assertThat(a.getUploadedAt()).as("check uploadedAt").isEqualTo(expected.getUploadedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFileUpdatableRelationshipsEquals(File expected, File actual) {
        assertThat(actual)
            .as("Verify File relationships")
            .satisfies(a -> assertThat(a.getPost()).as("check post").isEqualTo(expected.getPost()));
    }
}
